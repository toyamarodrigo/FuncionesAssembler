; REG - Funcion Ing e Imp Bin 8 bits

.8086
.MODEL SMALL
.STACK 100H
.DATA
	
	CARTEL DB 0DH, 0AH, "Ingrese Nro Binario 8bits: $"
    CARTEL2 DB 0DH, 0AH, "Impresion de Binario: $"

.CODE
MAIN PROC
	MOV AX, @DATA
	MOV DS, AX

    MOV AX, OFFSET CARTEL
    CALL ImprimirCartel         ;Llama a Imprimir Cartel
    CALL IngresoBinario         ;Llama a IngresoBinario

    MOV AX, OFFSET CARTEL2  
    CALL ImprimirCartel         ;Llama a Imprimir Cartel
    CALL ImprimeBinario         ;Llama a ImprimeBinario

    MOV AX, 4C00H               ;Fin
    INT 21H    
ENDP

ImprimirCartel PROC
    PUSH AX
    PUSH DX
    
    MOV DX, AX
    MOV AH, 9
    INT 21H

    POP DX
    POP AX
    RET
ENDP


IngresoBinario PROC
    MOV BL, 0                   ;BL = 0000 0000
    MOV CX, 8                   ;Loop 8
    CICLO:
		MOV AH, 8               ;Ingreso de 1 รณ 0 en AL
		INT 21H
        MOV DL, AL              ;Mueve AL a DL

		CMP DL, "1"             ;Valor en DL = 1?
		JE UNO

		CMP DL, "0"             ;Valor en DL = 0?
		JE CERO

		JMP CICLO               ;Jump CICLO
    UNO:
        MOV AH, 6               ;Imprime DL
        INT 21H
        MOV DL, AL              ;Mueve Valor AL a DL

        SHL BL, 1               ;ShiftLeft BL y agrega 1
        ADD BL, 1
        JMP OTRO
    CERO:
        MOV AH,6                ;Imprime DL
        INT 21H
        MOV DL, AL              ;Mueve valor Al a DL

        SHL BL, 1               ;ShiftLeft BL
    OTRO:
        LOOP CICLO              ;Loopea 8 veces (CX = 8)
    RET
ENDP

ImprimeBinario PROC
    CICLO2:
        SHL BL, 1                   ;ShiftLeft BL, si hay carry Jmp IMPUNO
        JC IMPUNO
    
    IMPCERO:                        
        MOV DL, "0"                 ;Mueve 0 a DL
    
    SIGO2:
        MOV AH, 6                   ;Imprime DL
        INT 21H
                                    ;CX = 0
        ADD CX, 1                   ;CX + 1

        CMP CX, 8                   ;CX = 8?
        JE FIN
        
        JMP CICLO2
    IMPUNO:
        MOV DL, "1"                 ;Mueve 1 a DL
        JMP SIGO2
    FIN:
        RET
    ENDP

END MAIN
