; Funciones de Ingreso xRegistro e Impresion de Binario 16bits xStack

.8086
.MODEL SMALL
.STACK 100H
.DATA
	
	CARTEL DB 0DH, 0AH, "Ingrese Nro Binario 16bits: $"
    CARTEL2 DB 0DH, 0AH, "Impresion de Binario: $"

.CODE
MAIN PROC
	MOV AX, @DATA
	MOV DS, AX

    MOV AX, OFFSET CARTEL
    CALL IMPRIMIRCARTEL         ;Llama funcion IMPRIMIRCARTEL
    CALL INGRESOBIN16           ;Llama funcion INGRESOBIN16
    MOV DI, AX

    MOV AX, OFFSET CARTEL2
    CALL IMPRIMIRCARTEL         ;Llama funcion IMPRIMIRCARTEL
    PUSH BX                     ;Salvo valor BX (binario 16bits)
    CALL IMPRIMIR_BIN16_STACK   ;Llama funcion IMPRIMIR_BIN
    ADD SP, 2
    
    MOV AX, 4C00H               ;Fin
    INT 21H
ENDP
 
IMPRIMIRCARTEL PROC
    PUSH AX
    PUSH DX
    
    MOV DX, AX
    MOV AH, 9
    INT 21H

    POP DX
    POP AX
    RET
ENDP

INGRESOBIN16 PROC
PUSH AX
PUSH DX
    MOV CX, 16                  ;Ciclo de 16
    MOV BX, 0                   ;BX = 0
ING_CICLO:
    MOV AH, 8                   ;Ingreso de 0 รณ 1 en AL
    INT 21H
    MOV DL, AL                  ;Muevo valor AL a DL

    CMP DL, '0'
    JE ING_CERO

    CMP DL, '1'
    JE ING_UNO

    JMP ING_CICLO
ING_UNO:
    MOV AH, 6                   ;Imprime DL
    INT 21H

    SHL BX, 1                   ;ShiftLeft BX y agrega 1
    ADD BX, 1

    JMP SIGO1
ING_CERO:
    MOV AH, 6                   ;Imprime DL
    INT 21H
    MOV DL, AL                  ;Mueve valor AL a DL

    SHL BX, 1                   ;ShiftLeft BL
SIGO1:
    LOOP ING_CICLO                 ;Loopea 16 veces
POP DX
POP AX
RET
ENDP


IMPRIMIR_BIN16_STACK PROC
    PUSH BP                             ;Salvo el BP y guardo el SP en el BP
    MOV BP, SP

    PUSH AX                             ;Salvo registros a usar
    PUSH DX
    PUSH BX

    MOV BX, [BP+4]                      ;Guardo en BX el binario
    MOV CX, 16                           ;CX = 8 para Loop Binario 8bits

    IMP_CICLO:
        SHL BX, 1
        JC IMP_UNO
        MOV DL, '0'
        MOV AH, 6
        INT 21H
        JMP SIGO
    IMP_UNO:
        MOV DL, '1'
        MOV AH, 6
        INT 21H
    SIGO:
        SUB CX, 1
        CMP CX, 0
        JNE IMP_CICLO

        POP BX
        POP DX
        POP AX
        
        POP BP
    RET 
    ENDP

END MAIN
